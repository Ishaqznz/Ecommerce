<%- include('./user/partials/admin/header') %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Male Fashion - Admin Dashboard</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <style>
        :root {
            --sidebar-width: 260px;
            --header-height: 70px;
            --primary-color: #4169E1;
            --sidebar-bg: #fff;
            --content-bg: #f8f9fa;
            --dark-bg: #333;
            --success-color: #98FB98;
        }

        body {
            background-color: var(--content-bg);
            font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
        }

        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            left: 0;
            top: 0;
            bottom: 0;
            width: var(--sidebar-width);
            background: var(--sidebar-bg);
            border-right: 1px solid rgba(0,0,0,0.1);
            padding: 20px;
            z-index: 1000;
        }

        .logo {
            font-size: 24px;
            font-weight: bold;
            margin-bottom: 40px;
            color: #333;
            display: flex;
            align-items: center;
            text-decoration: none;
        }

        .logo span {
            color: #ff0000;
        }

        .nav-link {
            color: #666;
            padding: 12px 15px;
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 5px;
            border-radius: 8px;
            transition: all 0.3s;
            text-decoration: none;
        }

        .nav-link:hover {
            background-color: rgba(65, 105, 225, 0.1);
            color: var(--primary-color);
        }

        .nav-link.active {
            background-color: var(--primary-color);
            color: white;
        }

        .nav-link i {
            width: 20px;
            text-align: center;
        }

        /* Main Content Area */
        .main-wrapper {
            margin-left: var(--sidebar-width);
            min-height: 100vh;
        }

        /* Top Search Bar */
        .search-header {
            background: var(--primary-color);
            padding: 15px 30px;
            margin-bottom: 30px;
        }

        .search-header input {
            width: 100%;
            max-width: 600px;
            padding: 10px 20px;
            border: none;
            border-radius: 25px;
            margin: 0 auto;
            display: block;
        }

        /* Content Area */
        .content-area {
            padding: 0 30px 30px;
        }

        .content-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .content-title {
            font-size: 28px;
            color: #333;
            margin: 0;
        }

        .search-products {
            width: 300px;
            padding: 8px 15px;
            border: 1px solid #ddd;
            border-radius: 8px;
            background: #fff;
        }

        .btn-add-product {
            background: var(--success-color);
            color: #000;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-weight: 500;
            text-decoration: none;
        }

        /* Table Styles */
        .product-table {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
            overflow: hidden;
        }

        .table {
            margin-bottom: 0;
        }

        .table th {
            background: var(--dark-bg);
            color: #fff;
            font-weight: 500;
            padding: 15px;
            border: none;
        }

        .table td {
            padding: 15px;
            vertical-align: middle;
            border-bottom: 1px solid #eee;
        }

        .product-image {
            width: 50px;
            height: 50px;
            border-radius: 4px;
            object-fit: cover;
        }

        /* Color Dots */
        .color-dots {
            display: flex;
            gap: 8px;
        }

        .dot {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: 1px solid rgba(0,0,0,0.1);
        }

        .dot.red { background-color: #ff4444; }
        .dot.black { background-color: #000; }
        .dot.blue { background-color: #4444ff; }

        /* Pagination */
        .pagination {
            display: flex;
            justify-content: center;
            gap: 8px;
            margin-top: 24px;
        }

        .pagination a, .pagination span {
            padding: 8px 16px;
            background: #fff;
            border-radius: 8px;
            text-decoration: none;
            color: #666;
            min-width: 40px;
            text-align: center;
            transition: all 0.3s;
        }

        .pagination a:hover {
            background: rgba(65, 105, 225, 0.1);
            color: var(--primary-color);
        }

        .pagination .current-page {
            background: var(--primary-color);
            color: #fff;
        }

        /* Alert Styles */
        .alert {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
            animation: slideIn 0.5s ease-out;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
            }
            to {
                transform: translateX(0);
            }
        }

        /* Action Buttons */
        .btn-icon {
            width: 32px;
            height: 32px;
            padding: 0;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            border-radius: 6px;
            border: none;
        }

        .btn-edit {
            background: var(--primary-color);
            color: white;
        }

        .btn-delete {
            background: #ff4444;
            color: white;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .main-wrapper {
                margin-left: 0;
            }

            .content-header {
                flex-direction: column;
                gap: 15px;
            }

            .search-products {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar Navigation -->
    <nav class="sidebar">
        <a href="/admin/dashboard" class="logo">
            Male fashion<span>.</span>
        </a>
        <div class="nav-links">
            <a href="/admin/dashboard" class="nav-link">
                <i class="fas fa-home"></i>
                Dashboard
            </a>
            <a href="/admin/users" class="nav-link">
                <i class="fas fa-users"></i>
                Customers
            </a>
            <a href="/admin/category" class="nav-link">
                <i class="fas fa-tag"></i>
                Category
            </a>
          
            <a href="/admin/products" class="nav-link active">
                <i class="fas fa-box"></i>
                Products
            </a>
            <a href="/admin/coupon" class="nav-link">
                <i class="fas fa-ticket-alt"></i>
                Coupon
            </a>
            
            <a href="/admin/orders" class="nav-link">
                <i class="fas fa-shopping-cart"></i>
                Orders
            </a>
        </div>
    </nav>

    <div class="container">
        <div class="product-form-container">
            <h2 class="form-title">Add Products</h2>
            
            <form class="product-form" action="/admin/add-product" method="POST" enctype="multipart/form-data" id="form-data">
                <div class="form-grid">
                    <!-- Left Side: Form Fields -->
                    <div class="form-left">
                        <div class="form-group">
                            <label for="productName">Product Name:</label>
                            <input type="text" id="productName" name="productName" class="form-input" required>
                        </div>

                        <div class="form-group">
                            <label for="productDescription">Product Description:</label>
                            <textarea id="productDescription" name="productDescription" class="form-input" required></textarea>
                        </div>

                        <div class="form-group">
                            <label for="productCategory">Product Category:</label>
                            <select id="productCategory" name="productCategory" class="form-input" required>
                                <option value="">Select a category</option>
                                <% categories.forEach(category => { %>
                                    <option value="<%= category._id %>"><%= category.name %></option>
                                <% }); %>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Right Side: More Fields -->
                    <div class="form-right">
                        <div class="form-group">
                            <label for="productAmount">Product Amount:</label>
                            <input type="number" id="productAmount" name="productAmount" class="form-input" required>
                        </div>

                        <!-- <div class="form-group">
                            <label for="stockCount">Total Stock Count:</label>
                            <input type="number" id="stockCount" name="stockCount" class="form-input" disabled required>
                        </div> -->
                    </div>
                </div>

                <!-- Image Upload Section Below the Form -->
                <div class="image-upload-section">
                    <h3 class="section-title">Product Images</h3>
                    <div class="image-preview-container" id="imagePreviewContainer">
                        <!-- Preview images will be dynamically added here -->
                    </div>
                    <input type="file" id="productImage" name="productImage" class="file-input" accept="image/*" multiple required>
                    <label for="productImage" class="upload-label">Add Images</label>

                    <!-- Save Button for Cropped Image (Initially Hidden) -->
                    <div id="croppedImageSection" style="display: none;">
                        <button type="button" id="saveCropBtn" class="crop-btn">Save Crop</button>
                    </div>
                </div>

                <div class="form-group size-options">
                    <label for="productSize">Product Sizes and Quantities:</label>
                    <div class="size-container">
                        <div class="size-item">
                            <button type="button" class="size-btn" data-size="S">S</button>
                            <input type="number" class="size-quantity" data-size="S" min="0" placeholder="Qty">
                        </div>
                        <div class="size-item">
                            <button type="button" class="size-btn" data-size="M">M</button>
                            <input type="number" class="size-quantity" data-size="M" min="0" placeholder="Qty">
                        </div>
                        <div class="size-item">
                            <button type="button" class="size-btn" data-size="L">L</button>
                            <input type="number" class="size-quantity" data-size="L" min="0" placeholder="Qty">
                        </div>
                        <div class="size-item">
                            <button type="button" class="size-btn" data-size="XL">XL</button>
                            <input type="number" class="size-quantity" data-size="XL" min="0" placeholder="Qty">
                        </div>
                        <div class="size-item">
                            <button type="button" class="size-btn" data-size="XXL">XXL</button>
                            <input type="number" class="size-quantity" data-size="XXL" min="0" placeholder="Qty">
                        </div>
                    </div>
                    
                    <div class="selected-sizes-summary">
                        <p><strong>Selected Sizes:</strong></p>
                        <div id="selectedSizesList" class="selected-sizes-list">
                            <!-- Selected sizes with quantities will be shown here -->
                            <div class="selected-size-tag">No sizes selected</div>
                        </div>
                    </div>
                </div>
                
                <!-- Add Product Button Moved Below Image Section -->
                <button type="submit" class="submit-btn">Add Product</button>
            </form>
        </div>
    </div>

<!-- Include Cropper.js CSS and JS -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>



<style>



:root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --success-color: #4caf50;
            --error-color: #f44336;
            --text-color: #333;
            --light-gray: #f5f5f5;
            --border-color: #e0e0e0;
            --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --border-radius: 8px;
        }

        body {
            font-family: 'Segoe UI', 'Roboto', Arial, sans-serif;
            background-color: white;
            color: var(--text-color);
            margin: 0;
            padding: 20px;
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 30px;
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
        }

        .product-form-container {
            width: 100%;
        }

        .form-title {
            color: var(--text-color);
            font-size: 28px;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid var(--light-gray);
            font-weight: 600;
        }

        .product-form {
            display: flex;
            flex-direction: column;
            gap: 30px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr;
            gap: 20px;
        }

        @media (min-width: 768px) {
            .form-grid {
                grid-template-columns: 1fr 1fr;
            }
        }

        .form-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            font-weight: 500;
            margin-bottom: 8px;
            color: var(--text-color);
        }

        .form-input {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            font-size: 16px;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        .form-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
        }

        textarea.form-input {
            min-height: 120px;
            resize: vertical;
        }

        .image-upload-section {
            margin-top: 20px;
            padding: 25px;
            background-color: rgb(21, 21, 21);
            border-radius: var(--border-radius);
            text-align: center;
        }

        .section-title {
            font-size: 18px;
            margin-bottom: 20px;
            color: var(--text-color);
        }

        .image-preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            margin-bottom: 20px;
            justify-content: center;
            min-height: 100px;
        }

        .file-input {
            display: none;
        }

        .upload-label {
            display: inline-block;
            padding: 12px 24px;
            background-color: var(--primary-color);
            color: white;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: background-color 0.2s;
        }

        .upload-label:hover {
            background-color: var(--secondary-color);
        }

        .crop-btn {
            margin-top: 15px;
            padding: 10px 20px;
            background-color: var(--secondary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
        }

        .size-options {
            margin-top: 20px;
        }

        .size-container {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
        }

        .size-item {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 90px;
        }

        .size-btn {
            width: 50px;
            height: 50px;
            border: 2px solid var(--border-color);
            background-color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-weight: 600;
            margin-bottom: 8px;
            transition: all 0.2s;
        }

        .size-btn.active {
            background-color: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .size-quantity {
            width: 70px;
            padding: 8px;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            text-align: center;
            display: none;
        }

        .size-quantity.active {
            display: block;
        }

        .submit-btn {
            padding: 14px 30px;
            background-color: var(--success-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            font-size: 16px;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
            margin-top: 20px;
            align-self: flex-start;
        }

        .submit-btn:hover {
            background-color: #3d8b40;
        }

        /* Preview image styling */
        .image-preview {
            position: relative;
            width: 120px;
            height: 120px;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .remove-image {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 67, 54, 0.8);
            color: white;
            border: none;
            width: 25px;
            height: 25px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            font-size: 14px;
        }

        .selected-sizes-summary {
            margin-top: 15px;
            padding: 15px;
            background-color: white;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            text-align: left;
        }

        .selected-sizes-list {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .selected-size-tag {
            background-color: #0d0e0d;
            border: 1px solid #80cbc4;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 14px;
        }



.image-preview-item {
    position: relative;
    width: 150px;
    height: 150px;
    background-color: #2a2a2a;
    border: 2px dashed #444;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden; /* Ensure content doesn't overflow */
    margin-bottom: 10px; /* Space between images */
}

.delete-btn {
    position: absolute;
    bottom: 0; /* Align button at the bottom of the image */
    left: 50%;
    transform: translateX(-50%); /* Center button horizontally */
    background: transparent;
    color: white; /* Black color for the icon */
    font-size: 1 rem; /* Larger size for better visibility */
    border: none;
    cursor: pointer;
    padding: 5px;
    margin: 0;
    z-index: 10; /* Ensure the button is above the image */
}

.delete-btn:hover {
    color: #e53935; /* Change to red when hovering */
    transition: color 0.3s ease;
}

.delete-btn:focus {
    outline: none; /* Remove focus outline */
}


    .size-buttons {
        display: flex;
        gap: 0.5rem;
        margin-top: 0.5rem;
    }

.size-btn {
    padding: 0.5rem;
    background-color: #2a2a2a;
    border: 1px solid #444;
    color: white;
    cursor: pointer;
    border-radius: 4px;
}

.size-btn:hover {
    background-color: #333;
}



.size-btn.active {
    background-color: #4CAF50;
    border-color: #4CAF50;
}

    #croppedImageSection {
        display: none;
        height: 80px; /* Reduced height to make it medium */
        text-align: center;
        margin-top: 10px;
    }
    .product-form-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 2rem;
        background-color: #1a1a1a;
        border-radius: 8px;
    }

    .form-title {
        color: white;
        margin-bottom: 2rem;
        font-size: 1.5rem;
    }

    .form-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 2rem;
    }

    .form-left {
        width: 100%;
    }

    

    .section-title {
        color: white;
        margin-bottom: 1rem;
        font-size: 1.25rem;
    }

    .image-preview-container {
        display: flex;
        flex-wrap: wrap;
        gap: 1rem;
        margin-top: 1rem;
    }



    .image-preview-item img {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
    }

    .file-input {
        display: none;
    }

    .upload-label {
        display: inline-block;
        padding: 0.5rem 1rem;
        background-color: #2a2a2a;
        color: white;
        cursor: pointer;
        border-radius: 4px;
        text-align: center;
        width: 100%;
        margin-top: 1rem;
    }

    .upload-label:hover {
        background-color: #333;
    }

    .size-options {
        color: white;
        margin-top: 1.5rem;
    }

    .size-buttons {
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        gap: 0.5rem;
        margin-top: 0.5rem;
    }

    .size-btn {
        padding: 0.5rem;
        background-color: #2a2a2a;
        border: 1px solid #444;
        color: white;
        cursor: pointer;
        border-radius: 4px;
    }

    .size-btn:hover {
        background-color: #333;
    }

    .size-btn.active {
        background-color: #4CAF50;
        border-color: #4CAF50;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-group label {
        display: block;
        color: white;
        margin-bottom: 0.5rem;
    }

    .form-input {
        width: 100%;
        padding: 0.75rem;
        background-color: #2a2a2a;
        border: 1px solid #444;
        border-radius: 4px;
        color: white;
    }

    .form-input:focus {
        outline: none;
        border-color: #4CAF50;
    }

    textarea.form-input {
        min-height: 100px;
        resize: vertical;
    }

    .submit-btn {
        background-color: #4CAF50;
        color: white;
        padding: 0.75rem 2rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 1rem;
        margin-top: 1.5rem;
    }

    .submit-btn:hover {
        background-color: #45a049;
    }

    /* Add basic responsiveness */
    @media (max-width: 768px) {
        .product-form-container {
            padding: 1rem;
        }
    }

    .crop-btn {
        position: absolute;
        bottom: 5px;
        left: 50%;
        transform: translateX(-50%);
        background-color: #4CAF50;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        cursor: pointer;
    }

</style>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.all.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.all.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script>



const sizeData = {};
        const sizeButtons = document.querySelectorAll('.size-btn');
        const sizeQuantities = document.querySelectorAll('.size-quantity');
        const selectedSizesList = document.getElementById('selectedSizesList');
        
        // Update the summary display
        function updateSizesSummary() {
            // Clear current summary
            selectedSizesList.innerHTML = '';
            
            // Check if any sizes are selected
            const selectedSizes = Object.keys(sizeData);
            
            if (selectedSizes.length === 0) {
                selectedSizesList.innerHTML = '<div class="selected-size-tag">No sizes selected</div>';
                return;
            }
            
            // Add each selected size with quantity
            for (const size in sizeData) {
                const quantity = sizeData[size];
                const sizeTag = document.createElement('div');
                sizeTag.className = 'selected-size-tag';
                sizeTag.textContent = `${size} - ${quantity}`;
                selectedSizesList.appendChild(sizeTag);
            }
        }
        
        // Size button click handler
        sizeButtons.forEach(button => {
            button.addEventListener('click', function() {
                const size = this.getAttribute('data-size');
                const quantityField = document.querySelector(`.size-quantity[data-size="${size}"]`);
                
                if (this.classList.contains('active')) {
                    // Deactivate button and hide quantity field
                    this.classList.remove('active');
                    quantityField.classList.remove('active');
                    
                    // Remove size from data
                    delete sizeData[size];
                } else {
                    // Activate button and show quantity field
                    this.classList.add('active');
                    quantityField.classList.add('active');
                    
                    // Set initial quantity to 1
                    quantityField.value = 1;
                    sizeData[size] = 1;
                }
                
                updateSizesSummary();
            });
        });
        
        // Quantity input handler
        sizeQuantities.forEach(quantityField => {
            quantityField.addEventListener('input', function() {
                const size = this.getAttribute('data-size');
                const quantity = parseInt(this.value) || 0;
                
                if (quantity > 0) {
                    sizeData[size] = quantity;
                } else {
                    // If quantity is set to 0 or invalid, deactivate the size
                    const sizeButton = document.querySelector(`.size-btn[data-size="${size}"]`);
                    sizeButton.classList.remove('active');
                    this.classList.remove('active');
                    delete sizeData[size];
                }
                
                updateSizesSummary();
            });
        });



    let selectedSizes = []; // Array to store selected sizes
    let croppedFiles = []; // Store cropped images

    // Add event listeners to size buttons
    document.querySelectorAll('.size-btn').forEach(button => {
        button.addEventListener('click', function () {
            const size = this.getAttribute('data-size');

            // Toggle size selection
            if (selectedSizes.includes(size)) {
                selectedSizes = selectedSizes.filter(s => s !== size); // Remove size if already selected
                this.classList.remove('active');
            } else {
                selectedSizes.push(size); // Add size if not selected
                this.classList.add('active');
            }
        });
    });

    // Handle image upload and cropping
    document.getElementById('productImage').addEventListener('change', function (e) {
        const previewContainer = document.getElementById('imagePreviewContainer');
        const files = e.target.files;

        // Clear previous cropped files and previews
        croppedFiles = [];
        previewContainer.innerHTML = ''; // Remove all previous images

        let cropper;

        // Iterate over the files and display each one
        for (let file of files) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const img = document.createElement('img');
                img.src = e.target.result;
                img.classList.add('preview-image');
                img.style.maxWidth = '100px';
                img.style.cursor = 'pointer';

                // Append the uploaded image to the preview container
                previewContainer.appendChild(img);

                // Enable cropping when clicking an image
                img.addEventListener('click', function () {
                    if (cropper) {
                        cropper.destroy(); // Destroy the existing cropper if there is one
                    }

                    img.style.maxWidth = '100%'; // Expand image for cropping
                    cropper = new Cropper(img, {
                        aspectRatio: 1, // Square crop
                        viewMode: 1,
                    });

                    // Show the save button for cropping
                    document.getElementById('croppedImageSection').style.display = 'block';
                });
            };
            reader.readAsDataURL(file);
        }

        document.getElementById('saveCropBtn').addEventListener('click', function () {
            if (cropper) {
                cropper.getCroppedCanvas().toBlob((blob) => {
                    let fileName = `cropped_${Date.now()}.png`;
                    let croppedFile = new File([blob], fileName, { type: 'image/png' });

                    const previewItem = document.createElement('div');
                    previewItem.classList.add('image-preview-item');

                    const previewImage = document.createElement('img');
                    previewImage.src = URL.createObjectURL(croppedFile);
                    previewImage.style.maxWidth = '100%';
                    previewItem.appendChild(previewImage);

                    const deleteBtn = document.createElement('button');
                    deleteBtn.textContent = 'Delete';
                    deleteBtn.classList.add('delete-btn');
                    deleteBtn.addEventListener('click', function () {
                        previewContainer.removeChild(previewItem);
                        croppedFiles = croppedFiles.filter(file => file !== croppedFile); 
                    });

                    previewItem.appendChild(deleteBtn);

                    previewContainer.appendChild(previewItem);

                    croppedFiles.push(croppedFile);

                    previewContainer.removeChild(img); 

                    cropper.destroy(); 
                    document.getElementById('croppedImageSection').style.display = 'none';
                }, 'image/png');
            }
        });
    });

    document.querySelector('.product-form').addEventListener('submit', function(e) {
    e.preventDefault(); 

    const productName = document.getElementById('productName').value.trim();
    const productNameRegex = /^[a-zA-Z\s]+$/;
    if (!productNameRegex.test(productName)) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid Product Name',
            text: 'Product name cannot contain numbers or special characters.'
        });
        return;
    }

    if (croppedFiles.length < 3) {
        Swal.fire({
            icon: 'error',
            title: 'Insufficient Images',
            text: 'You must upload at least 3 images.'
        });
        return;
    }

    const formData = new FormData(this);
    const requiredFields = ['productName', 'productDescription', 'productCategory', 'productAmount'];
    for (let field of requiredFields) {
        if (!formData.get(field)) {
            Swal.fire({
                icon: 'error',
                title: 'Missing Information',
                text: `Please fill in the ${field.replace(/([A-Z])/g, ' $1').toLowerCase()}.`
            });
            return;
        }
    }

    if (Object.keys(sizeData).length === 0) {
        Swal.fire({
            icon: 'error',
            title: 'Size Required',
            text: 'Please select at least one size with a quantity.'
        });
        return;
    }

    formData.append('productSizes', JSON.stringify(sizeData));

    formData.delete('productImage');
    croppedFiles.forEach((file) => {
        formData.append('productImage', file);
    });

    fetch(this.action, {
        method: 'POST',
        body: formData
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Product added successfully!'
        }).then(() => {
            window.location.href = '/admin/products';
        });
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'There was a problem adding the product. Please try again.'
        });
    });
});

</script>
