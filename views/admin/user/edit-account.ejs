<%- include('partials/user/header') %>

<head>
    <!-- SweetAlert2 CSS -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.0/dist/sweetalert2.min.css" rel="stylesheet">

<!-- SweetAlert2 JS -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.0/dist/sweetalert2.all.min.js"></script>

</head>

<style>
    .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }

        .dashboard-layout {
            display: grid;
            grid-template-columns: 280px 1fr; 
            gap: 2rem;
        }

        /* Sidebar Styles */
        .sidebar {
            background: white;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }

        .profile-header {
            display: flex;
            align-items: center;
            margin-bottom: 2rem;
            padding-bottom: 1.5rem;
            border-bottom: 1px solid #eee;
        }

        .profile-image {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background: #ffd700;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
        }

        .nav-item {
            padding: 0.75rem 1rem;
            margin: 0.5rem 0;
            border-radius: 8px;
            color: #666;
            text-decoration: none;
            display: flex;
            align-items: center;
            transition: all 0.2s;
        }

        .nav-item.active {
            background: #f0f7ff;
            color: #1a73e8;
        }

        .nav-item i {
            margin-right: 0.75rem;
            width: 20px;
        }





        
        .form-group {
            margin-bottom: 24px;
        }

        .form-label {
            display: block;
            color: #333;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .required::after {
            content: " *";
            color: #666;
        }

        .form-input {
            width: 100%;
            padding: 12px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }

        .form-row {
            display: flex;
            gap: 20px;
            margin-bottom: 24px;
        }

        .form-row > div {
            flex: 1;
        }

        .date-input {
            position: relative;
        }

        .date-input input {
            padding-right: 40px;
        }

        .date-icon {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #0066cc;
        }

        .dob-hint {
            color: #666;
            font-size: 12px;
            margin-top: 8px;
        }

        .gender-options {
            display: flex;
            gap: 16px;
            margin-top: 8px;
        }

        .gender-option {
            flex: 1;
            padding: 12px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
        }

        .gender-option.selected {
            background-color: #ffd54f;
            border-color: #ffd54f;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-top: 24px;
        }

        .checkbox-group input[type="checkbox"] {
            width: 20px;
            height: 20px;
        }

        .mobile-group {
            position: relative;
        }

        .change-button {
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: #0066cc;
            background: none;
            border: none;
            cursor: pointer;
            font-weight: bold;
        }

        .save-button {
            width: 100%;
            padding: 16px;
            background-color: #e5e7eb;
            color: #666;
            border: none;
            border-radius: 4px;
            font-size: 16px;
            cursor: pointer;
            margin-top: 24px;
        }

        .save-button:hover {
            background-color: #d1d5db;
        }



        .reset-password-btn {
    background-color: transparent;
    color: #3f51b5;
    border: 2px solid #3f51b5;
    border-radius: 4px;
    padding: 8px 12px;
    font-weight: 600;
    font-size: 13px;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 10px;
  }
  
  .reset-password-btn:hover {
    background-color: #3f51b5;
    color: white;
  }
  
  /* Modal Styles */
  .password-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    justify-content: center;
    align-items: center;
  }
  
  .modal-content {
    background-color: white;
    border-radius: 8px;
    width: 100%;
    max-width: 380px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    animation: slideIn 0.3s ease;
  }
  
  @keyframes slideIn {
    from { transform: translateY(-50px); opacity: 0; }
    to { transform: translateY(0); opacity: 1; }
  }
  
  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 16px;
    border-bottom: 1px solid #eee;
  }
  
  .modal-header h3 {
    margin: 0;
    color: #333;
    font-size: 16px;
  }
  
  .close-modal {
    background: none;
    border: none;
    font-size: 20px;
    cursor: pointer;
    color: #999;
  }
  
  .close-modal:hover {
    color: #333;
  }
  
  .modal-body {
    padding: 16px;
  }
  
  .modal-footer {
    display: flex;
    justify-content: flex-end;
    gap: 10px;
    padding: 12px 16px;
    border-top: 1px solid #eee;
  }
  
  /* Form elements */
  .form-group {
    margin-bottom: 14px;
  }
  
  .form-label {
    display: block;
    margin-bottom: 4px;
    font-size: 13px;
    color: #555;
  }
  
  .form-label.required:after {
    content: "*";
    color: #f44336;
    margin-left: 3px;
  }
  
  .form-input {
    width: 100%;
    padding: 8px 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
  }
  
  /* Password input with toggle button */
  .password-input-wrapper {
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .toggle-password {
    position: absolute;
    right: 8px;
    background: none;
    border: none;
    color: #999;
    cursor: pointer;
    font-size: 14px;
  }
  
  /* Button Styles */
  .cancel-btn {
    background-color: #f5f5f5;
    color: #333;
    border: none;
    border-radius: 4px;
    padding: 8px 12px;
    font-size: 13px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  .cancel-btn:hover {
    background-color: #e0e0e0;
  }
  
  .submit-btn {
    background-color: #3f51b5;
    color: white;
    border: none;
    border-radius: 4px;
    padding: 8px 12px;
    font-size: 13px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s;
  }
  
  .submit-btn:hover {
    background-color: #303f9f;
  }
  
  .submit-btn:disabled {
    background-color: #c5cae9;
    cursor: not-allowed;
  }
  
  /* Password Strength Meter */
  .password-strength {
    margin-top: 12px;
  }
  
  .strength-meter {
    height: 4px;
    background-color: #eee;
    border-radius: 2px;
    overflow: hidden;
    margin-bottom: 4px;
  }
  
  .strength-bar {
    height: 100%;
    width: 0;
    background-color: #ff3d00;
    transition: width 0.3s, background-color 0.3s;
  }
  
  .strength-text {
    font-size: 12px;
    color: #ff3d00;
    text-align: right;
  }
        
</style>
<div class="container">
    <div class="dashboard-layout">
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="profile-header">
            <div class="profile-image">
                <i class="fas fa-user"></i>
            </div>
            <h2>Hello</h2>
        </div>

        <nav>
            <a href="#" class="nav-item">
                <i class="fas fa-shopping-bag"></i>
                MY ORDERS
            </a>
            <a href="/account" class="nav-item active">
                <i class="fas fa-user-cog"></i>
                ACCOUNT SETTINGS
            </a>
            <a href="#" class="nav-item">
                <i class="fas fa-user"></i>
                Profile Information
            </a>
            <a href="/profile" class="nav-item" id="manage-address">
                <i class="fas fa-map-marker-alt"></i>
                Manage Addresses
            </a>
            <a href="#" class="nav-item">
                <i class="fas fa-id-card"></i>
                PAN Card Information
            </a>
        </nav>
    </div>

    <form action="/update-profile" method="POST">
        <div class="form-row">
            <div class="form-group">
                <label class="form-label required">Full Name</label>
                <input type="text" class="form-input" name="fullName" id="fullName" value="<%= user.name %>" required>
            </div>
        </div>

        <div class="form-group">
            <label class="form-label required">Email Id</label>
            <input type="email" class="form-input" id="email" name="email" value="<%= user.email %>" disabled required>
        </div>
        <button type="button" class="change-button" id="change-email">CHANGE</button>

        <div class="form-group" style="display: none;" id="new-email-container">
            <label class="form-label required">New Email</label>
            <input type="email" class="form-input" id="new-email" name="email" required>
            <button type="button" class="" id="send-otp">Send OTP</button>
        </div>

        <div class="verify-otp" style="display: none;" id="verify-div">
            <input type="number" placeholder="otp" id="otp-field">
            <button type="button" id="verify-otp">verify otp</button>
        </div>


        <div class="form-group password-group">
            <button type="button" class="reset-password-btn" id="reset-password">
              <i class="fas fa-lock"></i> RESET PASSWORD
            </button>
          </div>
          




          <!-- modal for reset password -->
          <div class="password-modal" id="password-modal">
            <div class="modal-content">
              <div class="modal-header">
                <h3>Reset Password</h3>
                <button type="button" class="close-modal" id="close-modal">&times;</button>
              </div>
              <div class="modal-body">
                <div class="form-group">
                  <label class="form-label required">Current Password</label>
                  <div class="password-input-wrapper">
                    <input type="password" class="form-input" id="current-password" required autocomplete="new-password">
                    <button type="button" class="toggle-password" data-target="current-password">
                      <i class="fas fa-eye"></i>
                    </button>
                  </div>
                </div>
                <div class="form-group">
                  <label class="form-label required">New Password</label>
                  <div class="password-input-wrapper">
                    <input type="password" class="form-input" id="new-password" required>
                    <button type="button" class="toggle-password" data-target="new-password">
                      <i class="fas fa-eye"></i>
                    </button>
                  </div>
                </div>
                <div class="form-group">
                  <label class="form-label required">Confirm New Password</label>
                  <div class="password-input-wrapper">
                    <input type="password" class="form-input" id="confirm-password" required>
                    <button type="button" class="toggle-password" data-target="confirm-password">
                      <i class="fas fa-eye"></i>
                    </button>
                  </div>
                </div>
                <div class="password-strength" id="password-strength">
                  <div class="strength-meter">
                    <div class="strength-bar" id="strength-bar"></div>
                  </div>
                  <div class="strength-text" id="strength-text">Too weak</div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="cancel-btn" id="cancel-reset">CANCEL</button>
                <button type="submit" class="submit-btn" id="submit-reset" disabled>SUBMIT</button>
              </div>
            </div>
          </div>
          





        <div class="form-group mobile-group">
            <label class="form-label required">Mobile Number</label>
            <input type="tel" class="form-input" id="mobile" name="mobile" value="<%= user.phoneNumber %>" required>
        </div>

        <div class="checkbox-group">
            <input type="checkbox" name="whatsappUpdates" id="whatsappUpdates" <%= user.whatsappUpdates ? 'checked' : '' %>>
            <label for="whatsappUpdates">I want to receive order updates on whatsapp</label>
        </div>

        <button type="submit" class="save-button" id="save-changes">SAVE CHANGES</button>
    </form>

    <script>


document.addEventListener('DOMContentLoaded', function() {

  const resetBtn = document.getElementById('reset-password');
  const modal = document.getElementById('password-modal');
  const closeBtn = document.getElementById('close-modal');
  const cancelBtn = document.getElementById('cancel-reset');
  const submitBtn = document.getElementById('submit-reset');
  const newPassword = document.getElementById('new-password');
  const confirmPassword = document.getElementById('confirm-password');
  const strengthBar = document.getElementById('strength-bar');
  const strengthText = document.getElementById('strength-text');
  

  resetBtn.addEventListener('click', function() {
    modal.style.display = 'flex';
  });

  function closeModal() {
    modal.style.display = 'none';

    document.getElementById('current-password').value = '';
    newPassword.value = '';
    confirmPassword.value = '';
    strengthBar.style.width = '0%';
    strengthBar.style.backgroundColor = '#ff3d00';
    strengthText.textContent = 'Too weak';
    strengthText.style.color = '#ff3d00';
    
    submitBtn.disabled = true;
  }
  
  closeBtn.addEventListener('click', closeModal);
  cancelBtn.addEventListener('click', closeModal);

  modal.addEventListener('click', function(e) {
    if (e.target === modal) {
      closeModal();
    }
  });

  const toggleButtons = document.querySelectorAll('.toggle-password');
  toggleButtons.forEach(button => {
    button.addEventListener('click', function() {
      const targetId = this.getAttribute('data-target');
      const inputField = document.getElementById(targetId);
      
      if (inputField.type === 'password') {
        inputField.type = 'text';
        this.innerHTML = '<i class="fas fa-eye-slash"></i>';
      } else {
        inputField.type = 'password';
        this.innerHTML = '<i class="fas fa-eye"></i>';
      }
    });
  });

  newPassword.addEventListener('input', function() {
    const password = this.value;

    const hasLength = password.length >= 8;
    const hasUppercase = /[A-Z]/.test(password);
    const hasLowercase = /[a-z]/.test(password);
    const hasNumber = /[0-9]/.test(password);
    const hasSpecial = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password);

    let strength = 0;
    if (hasLength) strength += 20;
    if (hasUppercase) strength += 20;
    if (hasLowercase) strength += 20;
    if (hasNumber) strength += 20;
    if (hasSpecial) strength += 20;

    strengthBar.style.width = strength + '%';

    if (strength < 40) {
      strengthBar.style.backgroundColor = '#ff3d00';
      strengthText.textContent = 'Too weak';
      strengthText.style.color = '#ff3d00';
    } else if (strength < 60) {
      strengthBar.style.backgroundColor = '#ffa000';
      strengthText.textContent = 'Could be stronger';
      strengthText.style.color = '#ffa000';
    } else if (strength < 80) {
      strengthBar.style.backgroundColor = '#ffc400';
      strengthText.textContent = 'Good';
      strengthText.style.color = '#ffc400';
    } else {
      strengthBar.style.backgroundColor = '#4caf50';
      strengthText.textContent = 'Strong';
      strengthText.style.color = '#4caf50';
    }
    
    validateForm();
  });
  
  confirmPassword.addEventListener('input', validateForm);
  
  function validateForm() {
    const password = newPassword.value;
    const confirmPwd = confirmPassword.value;
    const currentPwd = document.getElementById('current-password').value;

    const hasRequirements = 
      password.length >= 8 && 
      /[A-Z]/.test(password) && 
      /[a-z]/.test(password) && 
      /[0-9]/.test(password) && 
      /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(password);
    
    const passwordsMatch = password === confirmPwd && password !== '';

    submitBtn.disabled = !(hasRequirements && passwordsMatch && currentPwd !== '');
  }
  
  submitBtn.addEventListener('click', async function(e) {
    e.preventDefault();
    // alert('Password changed successfully!');
    
    const newPassword = document.getElementById('new-password').value
    const currentPwd = document.getElementById('current-password').value

    const response = await fetch('/changePass', {
        method: 'POST',
        headers: {
            'Content-type': 'application/json'
        },
        body: JSON.stringify({ newPassword, currentPwd })
    })

    const result = await response.json()


    if (result.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Password updated successfully!',
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'OK'
            }).then(() => {
                closeModal();
            });
            return;
        }

        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: result.message || 'Unable to change the password!',
            confirmButtonColor: '#d33',
            confirmButtonText: 'Try Again'
        });


    });

  document.getElementById('current-password').addEventListener('input', validateForm);
});




document.getElementById('manage-address').addEventListener('click', () => {
    window.location.href = '/profile';
});

document.addEventListener('DOMContentLoaded', () => {
    const changeEmailButton = document.getElementById('change-email');
    const newEmailContainer = document.getElementById('new-email-container');
    
    changeEmailButton.addEventListener('click', () => {
        newEmailContainer.style.display = 'block'; 
    });

    document.getElementById('send-otp').addEventListener('click', async (e) => {
        e.preventDefault();
        
        const changeEmail = document.getElementById('new-email').value;
        const value = 'edit';

        try {
            const response = await fetch('/resend-otp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ changeEmail, value })
            });

            const data = await response.json();
            
            Swal.fire({
                title: "OTP Sent Successfully! 📧",
                text: data.message,
                icon: "success",
                timer: 2000,
                toast: true,
                position: "top-end"
            });
            
            document.getElementById('verify-div').style.display = 'block';
        } catch (error) {
            Swal.fire({
                title: "Oops! Something went wrong 😟",
                text: "Error while sending OTP. Please try again.",
                icon: "error"
            });
        }
    });

    document.getElementById('verify-otp').addEventListener('click', async (e) => {
        e.preventDefault();
        
        const otpValue = document.getElementById('otp-field').value;
        
        try {
            const response = await fetch('/newEmail-verify', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ otpValue })
            });

            const data = await response.json();
            
            if (!data.success) {
                Swal.fire({
                    title: "Invalid OTP ❌",
                    text: "The OTP you entered is incorrect. Please try again!",
                    icon: "error"
                });
                return;
            }
            
            Swal.fire({
                title: "OTP Verified ✅",
                text: "OTP verified successfully, now updating your email!",
                icon: "success",
                timer: 2000,
                toast: true,
                position: "top-end"
            });

            const changeEmail = document.getElementById('new-email').value;
            const saveResponse = await fetch('/saveEmail', {
                method: 'PATCH',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ changeEmail })
            });

            const saveData = await saveResponse.json();
            
            Swal.fire({
                title: "Email Updated Successfully! ✨",
                text: saveData.message,
                icon: "success",
                timer: 2000,
                toast: true,
                position: "top-end"
            });

            window.location.reload();
        } catch (error) {
            Swal.fire({
                title: "Oops! Something went wrong 😞",
                text: "Error while verifying OTP. Please try again.",
                icon: "error"
            });
        }
    });
});

document.getElementById('save-changes').addEventListener('click', async () => {
    const fullName = document.getElementById('fullName').value;
    const email = document.getElementById('email').value;
    const mobile = document.getElementById('mobile').value;

    try {
        const response = await fetch('/saveAccount', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ fullName, email, mobile })
        });

        const data = await response.json();
        
        Swal.fire({
            title: "Account Updated! 🎉",
            text: data.message,
            icon: "success",
            timer: 2000,
            toast: true,
            position: "top-end"
        });

        window.location.reload();
    } catch (error) {
        Swal.fire({
            title: "Oops! Something went wrong 😞",
            text: "Error while updating the account details. Please try again.",
            icon: "error"
        });
    }
});


    </script>